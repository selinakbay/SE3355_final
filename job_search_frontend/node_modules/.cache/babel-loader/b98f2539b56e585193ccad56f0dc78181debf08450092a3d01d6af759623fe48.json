{"ast":null,"code":"var _jsxFileName = \"/Users/selinakbay/Job_Finder/job_search_frontend/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [language, setLanguage] = useState('EN');\n  const [jobs, setJobs] = useState([]);\n  const translations = {\n    EN: {\n      welcome: \"Welcome to Job Search\",\n      search: \"Search Jobs\",\n      apply: \"Apply Now\"\n    },\n    TR: {\n      welcome: \"İş Arama Platformuna Hoşgeldiniz\",\n      search: \"İş Ara\",\n      apply: \"Başvur\"\n    }\n  };\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(async position => {\n      const lat = position.coords.latitude;\n      const lon = position.coords.longitude;\n\n      // Function to fetch city from coordinates (replace with actual API logic)\n      const getCityFromCoordinates = async (lat, lon) => {\n        // Example: Fetch city from an API\n        // Replace with your own implementation\n        return \"SampleCity\";\n      };\n      const city = await getCityFromCoordinates(lat, lon);\n      axios.get(`http://localhost:5000/api/jobs?location=${city}`).then(response => setJobs(response.data)).catch(error => console.error('Error fetching jobs:', error));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: \"Job Search Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: translations[language].welcome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Explore job opportunities and apply with ease.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"btn btn-primary m-2\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: \"btn btn-secondary m-2\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setLanguage(e.target.value),\n        value: language,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"EN\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"TR\",\n          children: \"T\\xFCrk\\xE7e\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: translations[language].apply\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"AWOkNfrOcLdkM2EI6J/ZtX75mvA=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","jsxDEV","_jsxDEV","Home","_s","language","setLanguage","jobs","setJobs","translations","EN","welcome","search","apply","TR","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","getCityFromCoordinates","city","get","then","response","data","catch","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/Users/selinakbay/Job_Finder/job_search_frontend/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../App.css';\n\nfunction Home() {\n    const [language, setLanguage] = useState('EN');\n    const [jobs, setJobs] = useState([]);\n\n    const translations = {\n        EN: { welcome: \"Welcome to Job Search\", search: \"Search Jobs\", apply: \"Apply Now\" },\n        TR: { welcome: \"İş Arama Platformuna Hoşgeldiniz\", search: \"İş Ara\", apply: \"Başvur\" }\n    };\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(async (position) => {\n            const lat = position.coords.latitude;\n            const lon = position.coords.longitude;\n\n            // Function to fetch city from coordinates (replace with actual API logic)\n            const getCityFromCoordinates = async (lat, lon) => {\n                // Example: Fetch city from an API\n                // Replace with your own implementation\n                return \"SampleCity\"; \n            };\n\n            const city = await getCityFromCoordinates(lat, lon);\n\n            axios.get(`http://localhost:5000/api/jobs?location=${city}`)\n                .then(response => setJobs(response.data))\n                .catch(error => console.error('Error fetching jobs:', error));\n        });\n    }, []);\n\n    return (\n        <div>\n            <div className=\"navbar\">Job Search Platform</div>\n            <div className=\"container\">\n                <h1>{translations[language].welcome}</h1>\n                <p>Explore job opportunities and apply with ease.</p>\n                <div>\n                    <Link to=\"/login\" className=\"btn btn-primary m-2\">Login</Link>\n                    <Link to=\"/register\" className=\"btn btn-secondary m-2\">Register</Link>\n                </div>\n            </div>\n\n            <div>\n                <select onChange={(e) => setLanguage(e.target.value)} value={language}>\n                    <option value=\"EN\">English</option>\n                    <option value=\"TR\">Türkçe</option>\n                </select>\n                <button>{translations[language].apply}</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}